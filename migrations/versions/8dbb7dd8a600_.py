"""empty message

Revision ID: 8dbb7dd8a600
Revises:
Create Date: 2019-01-05 01:20:37.868866

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8dbb7dd8a600'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('order')
    op.drop_index('ix_customer_email', table_name='customer')
    op.drop_index('ix_customer_firstName', table_name='customer')
    op.drop_index('ix_customer_lastName', table_name='customer')
    op.drop_table('customer')
    op.drop_index('ix_user_username', table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('username', sa.VARCHAR(length=64),
                              autoincrement=False, nullable=False),
                    sa.Column('is_authorized', sa.BOOLEAN(),
                              autoincrement=False, nullable=True),
                    sa.Column('password_hash', sa.VARCHAR(length=64),
                              autoincrement=False, nullable=True),
                    sa.PrimaryKeyConstraint('id', name=u'user_pkey')
                    )
    op.create_index('ix_user_username', 'user', ['username'], unique=True)
    op.create_table('order',
                    sa.Column('orderID', sa.INTEGER(), server_default=sa.text(
                        u'nextval(\'"order_orderID_seq"\'::regclass)'), autoincrement=True, nullable=False),
                    sa.Column('item', sa.VARCHAR(length=64),
                              autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=64),
                              autoincrement=False, nullable=True),
                    sa.Column('dob', sa.VARCHAR(length=32),
                              autoincrement=False, nullable=True),
                    sa.Column('height', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('weight', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('message', sa.VARCHAR(length=300),
                              autoincrement=False, nullable=True),
                    sa.Column('isOrdered', sa.BOOLEAN(),
                              autoincrement=False, nullable=True),
                    sa.Column('dateOrdered', postgresql.TIMESTAMP(),
                              autoincrement=False, nullable=True),
                    sa.Column('customer_ID', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['customer_ID'], [u'customer.customerID'], name=u'order_customer_ID_fkey'),
                    sa.PrimaryKeyConstraint('orderID', name=u'order_pkey')
                    )
    op.create_table('customer',
                    sa.Column('customerID', sa.INTEGER(), server_default=sa.text(
                        u'nextval(\'"customer_customerID_seq"\'::regclass)'), autoincrement=True, nullable=False),
                    sa.Column('lastName', sa.VARCHAR(length=64),
                              autoincrement=False, nullable=True),
                    sa.Column('firstName', sa.VARCHAR(length=64),
                              autoincrement=False, nullable=True),
                    sa.Column('title', sa.VARCHAR(length=32),
                              autoincrement=False, nullable=True),
                    sa.Column('email', sa.VARCHAR(length=120),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint(
                        'customerID', name=u'customer_pkey')
                    )
    op.create_index('ix_customer_lastName', 'customer',
                    ['lastName'], unique=False)
    op.create_index('ix_customer_firstName', 'customer',
                    ['firstName'], unique=False)
    op.create_index('ix_customer_email', 'customer', ['email'], unique=True)
    # ### end Alembic commands ###
